name: 'Dispatch'

on:
  pull_request_review_comment:
    types:
      - 'created'
  pull_request_review:
    types:
      - 'submitted'
  pull_request:
    types:
      - 'opened'
  issues:
    types:
      - 'opened'
      - 'reopened'
  issue_comment:
    types:
      - 'created'

defaults:
  run:
    shell: 'bash'

jobs:
  debugger:
    if: ${{ fromJSON(vars.DEBUG || vars.ACTIONS_STEP_DEBUG || false) }}
    runs-on: 'ibm-x86-64-small'
    permissions:
      contents: 'read'
    steps:
      - name: 'Print context for debugging'
        env:
          DEBUG_event_name: '${{ github.event_name }}'
          DEBUG_event__action: '${{ github.event.action }}'
          DEBUG_event__comment__author_association: '${{ github.event.comment.author_association }}'
          DEBUG_event__issue__author_association: '${{ github.event.issue.author_association }}'
          DEBUG_event__pull_request__author_association: '${{ github.event.pull_request.author_association }}'
          DEBUG_event__review__author_association: '${{ github.event.review.author_association }}'
          DEBUG_event: '${{ toJSON(github.event) }}'
        run: |
          env | grep '^DEBUG_'

  dispatch:
    # PRs: فقط إذا ما كان من fork
    # التعليقات: فقط لو المستخدم كتب @claude أو /review،
    #            ومع تحقق ملكية/عضوية في حالة @claude (زي بوب).
    # الإشعارات: عند فتح/إعادة فتح Issue.
    if: |
      (
        github.event_name == 'pull_request' &&
        github.event.pull_request.head.repo.fork == false
      ) || (
        github.event.sender.type == 'User' &&
        startsWith(github.event.comment.body || github.event.review.body || github.event.issue.body, '@claude') &&
        contains(fromJSON('["OWNER","MEMBER","COLLABORATOR"]'),
                 github.event.comment.author_association || github.event.review.author_association || github.event.issue.author_association)
      ) || (
        github.event.sender.type == 'User' &&
        startsWith(github.event.comment.body || github.event.review.body || github.event.issue.body, '/review')
      ) || (
        github.event_name == 'issues' &&
        contains(fromJSON('["opened","reopened"]'), github.event.action)
      )
    runs-on: 'ibm-x86-64-small'
    permissions:
      contents: 'read'
      issues: 'write'
      pull-requests: 'write'
    outputs:
      command: '${{ steps.extract_command.outputs.command }}'
      request: '${{ steps.extract_command.outputs.request }}'
      additional_context: '${{ steps.extract_command.outputs.additional_context }}'
      issue_number: '${{ github.event.pull_request.number || github.event.issue.number }}'
    steps:
      - name: 'Extract command'
        id: 'extract_command'
        uses: 'actions/github-script@v7'
        env:
          EVENT_TYPE: '${{ github.event_name }}.${{ github.event.action }}'
          REQUEST: '${{ github.event.comment.body || github.event.review.body || github.event.issue.body }}'
        with:
          script: |
            const request = (process.env.REQUEST || '').trim();
            const eventType = process.env.EVENT_TYPE || '';
            core.setOutput('request', request);

            // اعتبر "@claude review" و "@claude /review" و "/review" كلّها مراجعة
            const isReviewCmd =
              /^@claude\s+\/?review\b/i.test(request) ||
              request.startsWith('/review');

            if (isReviewCmd || eventType === 'pull_request.opened') {
              core.setOutput('command', 'review');
              const additionalContext = request.replace(/^@claude\s+\/?review/i, '').replace(/^\/review/i, '').trim();
              core.setOutput('additional_context', additionalContext);
            } else if (/^@claude\b/i.test(request)) {
              core.setOutput('command', 'assistant');
              const additionalContext = request.replace(/^@claude/i, '').trim();
              core.setOutput('additional_context', additionalContext);
            } else if (['issues.opened', 'issues.reopened'].includes(eventType)) {
              core.setOutput('command', 'triage');
            } else {
              core.setOutput('command', 'fallthrough');
            }

      - name: 'Acknowledge request'
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN || github.token }}'
          ISSUE_NUMBER: '${{ github.event.pull_request.number || github.event.issue.number }}'
          MESSAGE: |-
            🤖 Hi @${{ github.actor }}, I've received your request, and I'm working on it now! You can track my progress [in the logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) for more details.
          REPOSITORY: '${{ github.repository }}'
        run: |
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${GITHUB_TOKEN}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.ibm.com/repos/${REPOSITORY}/issues/${ISSUE_NUMBER}/comments \
            -d "{\"body\":\"${MESSAGE}\"}"

  review:
    needs: 'dispatch'
    if: ${{ needs.dispatch.outputs.command == 'review' }}
    uses: './.github/workflows/review.yml'
    permissions:
      contents: 'read'
      id-token: 'write'
      issues: 'write'
      pull-requests: 'write'
    with:
      additional_context: '${{ needs.dispatch.outputs.additional_context }}'
    secrets: 'inherit'

  triage:
    needs: 'dispatch'
    if: ${{ needs.dispatch.outputs.command == 'triage' }}
    uses: './.github/workflows/triage.yml'
    permissions:
      contents: 'read'
      id-token: 'write'
      issues: 'write'
      pull-requests: 'read'
    with:
      additional_context: '${{ needs.dispatch.outputs.additional_context }}'
    secrets: 'inherit'

  assistant:
    needs: 'dispatch'
    if: ${{ needs.dispatch.outputs.command == 'assistant' }}
    uses: './.github/workflows/assistant.yml'
    permissions:
      contents: 'read'
      id-token: 'write'
      issues: 'write'
      pull-requests: 'write'
    with:
      additional_context: '${{ needs.dispatch.outputs.additional_context }}'
    secrets: 'inherit'

  fallthrough:
    needs:
      - 'dispatch'
      - 'review'
      - 'triage'
      - 'assistant'
    if: ${{ always() && !cancelled() && (failure() || needs.dispatch.outputs.command == 'fallthrough') }}
    runs-on: 'ibm-x86-64-small'
    permissions:
      contents: 'read'
      issues: 'write'
      pull-requests: 'write'
    steps:
      - name: 'Send failure comment'
        env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN || github.token }}'
          ISSUE_NUMBER: '${{ github.event.pull_request.number || github.event.issue.number }}'
          MESSAGE: |-
            🤖 I'm sorry @${{ github.actor }}, but I was unable to process your request. Please [see the logs](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}) for more details.
          REPOSITORY: '${{ github.repository }}'
        run: |
          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${GITHUB_TOKEN}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.ibm.com/repos/${REPOSITORY}/issues/${ISSUE_NUMBER}/comments \
            -d "{\"body\":\"${MESSAGE}\"}"
