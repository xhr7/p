name: Claude Triage

on:
  workflow_call:

permissions:
  contents: read
  issues: read
  pull-requests: read

jobs:
  triage:
    runs-on: ubuntu-latest
    outputs:
      available_labels: ${{ steps.get_labels.outputs.available_labels }}
      selected_labels: ${{ env.SELECTED_LABELS }}
    steps:
      - name: Get repository labels
        id: get_labels
        uses: actions/github-script@v7
        with:
          script: |
            const { data: labels } = await github.rest.issues.listLabelsForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
            });
            const names = (labels||[]).map(l=>l.name).sort();
            if (names.length === 0) core.setFailed('No labels found');
            core.setOutput('available_labels', names.join(','));

      - name: Choose labels with simple heuristics
        if: ${{ steps.get_labels.outputs.available_labels != '' }}
        shell: bash
        env:
          TITLE: ${{ github.event.issue.title || github.event.pull_request.title || '' }}
          BODY: ${{ github.event.issue.body || github.event.pull_request.body || '' }}
          LABELS: ${{ steps.get_labels.outputs.available_labels }}
          GITHUB_ENV: ${{ env.GITHUB_ENV }}
        run: |
          pick=""
          shopt -s nocasematch
          if [[ "$TITLE$BODY" =~ (bug|error|exception|fail) ]] && [[ ",$LABELS," =~ ",bug," ]]; then pick="${pick:+$pick,}bug"; fi
          if [[ "$TITLE$BODY" =~ (feat|feature|enhancement|improv) ]] && [[ ",$LABELS," =~ ",enhancement," ]]; then pick="${pick:+$pick,}enhancement"; fi
          echo "SELECTED_LABELS=$pick" >> "$GITHUB_ENV"

  apply:
    runs-on: ubuntu-latest
    needs: triage
    if: ${{ needs.triage.outputs.selected_labels != '' }}
    permissions:
      issues: write
      pull-requests: write
    steps:
      - name: Apply labels
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const labels = (process.env.SELECTED_LABELS||'').split(',').map(s=>s.trim()).filter(Boolean);
            const issue_number = context.payload.issue?.number || context.payload.pull_request?.number;
            if (labels.length>0) {
              await github.rest.issues.setLabels({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number,
                labels
              });
            }
